version: '3.7'

services:
  nginx:
    restart: always
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./django-template/static:/static
    ports:
      - "80:80"
    environment:
      TZ: "Asia/Tokyo"

  web:
    restart: always
    build:
      context: ./django-template
      args:
        - REQUIREMENT_TXT=production.txt
        - DATABASE_HOST=db
        - REDIS_URL=redis
    volumes:
      - ./django-template:/django-app/
    ports:
      - "3033:3033"
    command: >
      bash -c "chmod 777 ./db_healthchecker.sh &&
        ./db_healthchecker.sh &&
        python manage.py migrate --noinput &&
        python manage.py makemigrations app &&
        uwsgi uwsgi.ini --socket :3033"
    environment:
      TZ: "Asia/Tokyo"
    depends_on:
      - redis
      - db

  web-celery-worker:
    restart: always
    build:
      context: ./django-template
      args:
        - REQUIREMENT_TXT=production.txt
        - DATABASE_HOST=db
        - REDIS_URL=redis
    command: >
      bash -c "chmod 777 ./db_healthchecker.sh &&
        ./db_healthchecker.sh &&
        celery -A config worker -l info"
    volumes:
      - ./django-template:/django-app/
    depends_on:
      - web
      - redis

  web-celery-beat:
    restart: always
    build:
      context: ./django-template
      args:
        - REQUIREMENT_TXT=production.txt
        - DATABASE_HOST=db
        - REDIS_URL=redis
    command: >
      bash -c "chmod 777 ./db_healthchecker.sh &&
        ./db_healthchecker.sh &&
        celery -A config beat -l info --pidfile /tmp/celerybeat.pid --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./django-template:/django-app/
    depends_on:
      - web
      - redis

  db:
    restart: always
    image: mysql:8.0.17
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3306:3306"
    volumes:
      - type: volume
        source: mysqlvolume
        target: /var/lib/mysql
      - ./mysql/sql:/docker-entrypoint-initdb.d
      - ./mysql/entrypoint.sh:/tmp/entrypoint.sh
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: django
      MYSQL_ROOT_PASSWORD: django
      MYSQL_USER: django
      MYSQL_PASSWORD: django
      TZ: 'Asia/Tokyo'

  adminer:
    restart: always
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - db

  redis:
    restart: always
    image: redis
    ports:
      - 6379:6379
    environment:
      TZ: "Asia/Tokyo"

  mongo:
    restart: always
    image: mongo
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: django
      MONGO_INITDB_ROOT_PASSWORD: django
    volumes:
      - type: volume
        source: mongovolume
        target: /data/db
      - type: volume
        source: mongoconfigdbvolume
        target: /data/configdb

  mongo-express:
    restart: always
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: django
      ME_CONFIG_MONGODB_ADMINPASSWORD: django
    depends_on:
      - mongo

volumes:
  mysqlvolume:
    driver: local
  mongovolume:
    driver: local
  mongoconfigdbvolume:
    driver: local
